{"version":3,"sources":["components/FiltrationPanel.js","services/checkFilterStringValid .js","services/stringLengthFilter.js","services/substringFilter.js","App.js","reportWebVitals.js","index.js"],"names":["FiltrationPanel","props","className","type","placeholder","onChange","inputHandler","onClick","checkboxHandler","stringLengthFilterButtonHandler","substringFilterButtonHandler","checkFilterStringValid","string","filterString","trim","isNumber","test","isString","alert","stringLengthFilter","number","list","filter","itemList","length","substringFilter","str","doesCaseSensitive","substr","toLowerCase","includes","App","state","currentList","filterValue","fetch","then","response","json","data","setState","event","this","currentTarget","value","checked","map","idx","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a333ba40.chunk.js","sourcesContent":["import \"./FiltrationPanel.css\";\r\n\r\nexport const FiltrationPanel = (props) => {\r\n    return (\r\n        <div className=\"filtration-panel\">\r\n            <input type=\"text\" placeholder=\"String or Number\" onChange={props.inputHandler}></input>            \r\n            <label><input type=\"checkbox\" onClick={props.checkboxHandler}></input>Aa</label><br></br> \r\n            <button \r\n                className=\"string-length-filter-button\" \r\n                onClick={props.stringLengthFilterButtonHandler}>String Length Filter</button> \r\n            <button \r\n                className=\"substring-filter-button\" \r\n                onClick={props.substringFilterButtonHandler}>Substring Filter</button> \r\n        </div>\r\n\r\n    )\r\n}","export const checkFilterStringValid = (string) => {\r\n    const filterString = string.trim();\r\n\r\n    const regExpNumber = /^[0-9]+$/;\r\n    const regExpString = /^[A-Za-zА-Яа-я]+$/;\r\n\r\n    let isNumber = regExpNumber.test(filterString);\r\n    let isString = regExpString.test(filterString);\r\n\r\n    if (!isNumber && !isString){\r\n        alert(\"Please, write valid filter.\");\r\n        return;\r\n    }        \r\n\r\n    return {\r\n        isNumber,\r\n        isString\r\n    }\r\n}","export const stringLengthFilter = (number, list) => {\r\n    const filter = +number;\r\n    \r\n    return list.filter(itemList => itemList.length > filter);\r\n}","export const substringFilter = (str, list, doesCaseSensitive) => {\r\n    if(!doesCaseSensitive){\r\n        const substr = str.toLowerCase();\r\n\r\n        return list.filter(itemList => itemList.toLowerCase().includes(substr));\r\n    }\r\n       \r\n    return list.filter(itemList => itemList.includes(str));\r\n}","import { Component } from \"react\";\r\nimport './App.css';\r\nimport { FiltrationPanel } from \"./components/FiltrationPanel\";\r\nimport { checkFilterStringValid } from \"./services/checkFilterStringValid \";\r\nimport { stringLengthFilter } from \"./services/stringLengthFilter\";\r\nimport { substringFilter } from \"./services/substringFilter\";\r\n\r\nexport class App extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            list: [],\r\n            currentList: [],\r\n            doesCaseSensitive: false,\r\n            filterValue: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`https://thingproxy.freeboard.io/fetch/http://www.mrsoft.by/data.json`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                return this.setState({\r\n                    list: [...data.data],\r\n                    currentList: [...data.data]\r\n                });\r\n            });\r\n    }\r\n\r\n    inputHandler(event) {\r\n        this.setState({\r\n            filterValue: event.currentTarget.value\r\n        })\r\n    }\r\n\r\n    checkboxHandler(event) {\r\n        this.setState({\r\n            doesCaseSensitive: event.currentTarget.checked\r\n        })\r\n    }\r\n\r\n    stringLengthFilterButtonHandler() {\r\n        let isNumber = checkFilterStringValid(this.state.filterValue)?.isNumber;\r\n\r\n        if (!isNumber) return;\r\n\r\n        this.setState({\r\n            currentList: [...stringLengthFilter(this.state.filterValue, this.state.list)]\r\n        })\r\n    }\r\n\r\n    substringFilterButtonHandler() {\r\n        let isString = checkFilterStringValid(this.state.filterValue)?.isString;\r\n\r\n        if (!isString) return;\r\n\r\n        this.setState({\r\n            currentList: [...substringFilter(this.state.filterValue, this.state.list, this.state.doesCaseSensitive)]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"wrapper\">\r\n                <div className=\"list-scope\">\r\n                    <ul>\r\n                        {!this.state.currentList.length ? \"\" :\r\n                            this.state.currentList.map(((itemList, idx) => <li key={idx}>{itemList}</li>))}\r\n                    </ul>\r\n                </div>\r\n\r\n                <FiltrationPanel\r\n                    checkboxHandler={event => this.checkboxHandler(event)}\r\n                    inputHandler={event => this.inputHandler(event)}\r\n                    stringLengthFilterButtonHandler={() => this.stringLengthFilterButtonHandler()}\r\n                    substringFilterButtonHandler={() => this.substringFilterButtonHandler()} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}